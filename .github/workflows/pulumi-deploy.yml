name: Pulumi deploy
on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
            ref:
                required: true
                type: string
        # secrets:
        #     AWS_ACCOUNT_ID:
        #         required: true
        #     NPM_TOKEN:
        #         required: true

env:
    PULUMI_BUCKET: my-test-pulumi-bucket
    AWS_ACCOUNT_ID: 361081796204
    AWS_ENVIRONMENT: sandbox
    PULUMI_CONFIG_PASSPHRASE: 123456

jobs:
    pulumi-deploy-to-env:
        runs-on: ubuntu-latest
        environment:
            name: ${{ inputs.environment }}
        permissions:
          id-token: write
          contents: read
        steps:
            # - name: Map pulumi config passphrase
            #   run: |
            #       echo "PULUMI_CONFIG_PASSPHRASE=$(jq -n --arg env ${{ inputs.environment }} --arg sandbox ${{ vars.PULUMI_SANDBOX_STACK_CONFIG_PASSPHRASE }} --arg staging ${{ vars.PULUMI_STAGING_STACK_CONFIG_PASSPHRASE }} --arg production ${{ vars.PULUMI_PRODUCTION_STACK_CONFIG_PASSPHRASE }} '{
            #           "sandbox": $sandbox,
            #           "staging": $staging,
            #           "production-sg": $production
            #       }[$env]')" >> $GITHUB_ENV
            
            - name: Echo PULUMI_CONFIG_PASSPHRASE
              run: |
                echo "PASSPHRASE ${{ env.PULUMI_CONFIG_PASSPHRASE }}"

            - name: Checkout Source Code
              uses: actions/checkout@v4
              with:
                  persist-credentials: false
                  ref: ${{ inputs.ref }}

            - uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Setup nodejs and yarn with token
              uses: borales/actions-yarn@v4
              with:
                cmd: install

            - name: Login to AWS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                role-to-assume: ${{ secrets.GH_ACTION_ROLE }}
                aws-region: ap-southeast-1
              
            - name: Install AWS CLI v2
              run: |
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install

            - name: Get SSM Parameter
              run: |
                OUTPUT_VALUE=$(aws ssm get-parameter \
                  --name "/configs/PULUMI_TEST_PARAM" \
                  --with-decryption \
                  --query "Parameter.Value" \
                  --output text)
                echo "PULUMI_TEST_VALUE=$OUTPUT_VALUE" >> $GITHUB_ENV
          
            - name: Use the Parameter Value
              run: | 
                echo "SSM Parameter Value is: $PULUMI_TEST_VALUE"

            # - uses: pulumi/actions@v4
            #   with:
            #     command: preview
            #     work-dir: ./pulumi
            #     stack-name: organization/pulumi-spike-fn-test/candidatetest
            #     cloud-url: s3://${{ env.PULUMI_BUCKET }}
            #     upsert: true
            #     refresh: true

            # - name: Pulumi Provision Service/Resources
            #   uses: pulumi/actions@v4
            #   with:
            #       command: up
            #       cloud-url: s3://${{ env.PULUMI_BUCKET }}
            #       work-dir: ./pulumi
            #       stack-name: organization/pulumi-spike-fn-test/candidatetest
            #       refresh: true
            #       upsert: true
            #       comment-on-pr: true
            #       edit-pr-comment: false
