name: Pulumi deploy

on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
            ref:
                required: true
                type: string

env:
    PULUMI_BUCKET: my-test-pulumi-bucket
    AWS_ACCOUNT_ID: 361081796204
    AWS_ENVIRONMENT: sandbox
    PULUMI_CONFIG_PASSPHRASE: 123456

jobs:
    pulumi-deploy-to-env:
        runs-on: ubuntu-latest
        environment:
            name: ${{ inputs.environment }}
        outputs:
            DEPLOYMENT_INFO: ${{ steps.ssm.outputs.DEPLOYMENT_INFO }}
        steps:            
            - name: Login to AWS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-southeast-1

            - name: Get SSM Parameter
              id: ssm
              run: |
                SSM_VALUE=$(aws ssm get-parameter \
                  --name "/configs/deployment/sandbox/434343955077-ap-southeast-1" \
                  --with-decryption \
                  --query "Parameter.Value" \
                  --output text)
                # echo "DEPLOYMENT_INFO={\"include\": $SSM_VALUE }" >> $GITHUB_OUTPUT

                {
                    "include": [
                        {
                            "name": "group name",
                            "items": {
                                "include": [matrix items]
                            } ## serialized as string
                        }
                    ]
                }

                ARRAY='[{"account": "account1", "region": "us-east-1"}, {"account": "account2", "region": "us-west-2"}, {"account": "account3", "region": "eu-central-1"}, {"account": "account4", "region": "ap-southeast-1"}]'
                CHUNK_SIZE=256  # Github matrix limit

                # Parse the JSON array and chunk it in JavaScript
                node <<EOF > chunks.json

                const format = (batchName, items) => ({
                    batchName,
                    items: {
                        include: items,
                    },
                });

                const formats = (chunkedTenants) => ({
                    include: chunkedTenants.map((chunkedTenant, index) =>
                        format(`Batch ${++index}`, chunkedTenant)
                    ),
                });

                const chunk = (array, chunkSize) => {
                    const chunks = [];
                    for (let i = 0; i < array.length; i += chunkSize) {
                        chunks.push(array.slice(i, i + chunkSize));
                    }
                    return chunks;
                };

                const array = ${ARRAY};
                const chunkSize = ${CHUNK_SIZE};
                const chunks = chunk(array, chunkSize);
                const matrix = formats(chunks);

                console.log(JSON.stringify(matrix));
                EOF

                # Save chunks to GitHub Actions output
                echo "DEPLOYMENT_INFO=$(cat chunks.json)" >> $GITHUB_OUTPUT

            - name: Log the Parameter Value
              run: | 
                echo "SSM Parameter Value is: ${{ steps.ssm.outputs.DEPLOYMENT_INFO }}"

    deploy:
        needs: pulumi-deploy-to-env
        name: Deploy to ${{ inputs.environment }} by @${{ github.actor }}
        runs-on: ubuntu-latest
        environment:
            name: ${{ inputs.environment }}
        strategy:
            matrix: ${{ fromJSON(needs.pulumi-deploy-to-env.outputs.DEPLOYMENT_INFO) }}
        steps:
            - name: Retrieve Artifact
              run: |
                echo "Output account: ${{ matrix.batchName}}"
                echo "Output region ${{ matrix.items}}"